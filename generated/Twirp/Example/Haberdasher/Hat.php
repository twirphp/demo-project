<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/haberdasher.proto

namespace Twirp\Example\Haberdasher;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A Hat is a piece of headwear made by a Haberdasher.
 *
 * Generated from protobuf message <code>twirp.example.haberdasher.Hat</code>
 */
class Hat extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 inches = 1;</code>
     */
    private $inches = 0;
    /**
     * anything but "invisible"
     *
     * Generated from protobuf field <code>string color = 2;</code>
     */
    private $color = '';
    /**
     * i.e. "bowler"
     *
     * Generated from protobuf field <code>string name = 3;</code>
     */
    private $name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $inches
     *     @type string $color
     *           anything but "invisible"
     *     @type string $name
     *           i.e. "bowler"
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Haberdasher::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 inches = 1;</code>
     * @return int
     */
    public function getInches()
    {
        return $this->inches;
    }

    /**
     * Generated from protobuf field <code>int32 inches = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setInches($var)
    {
        GPBUtil::checkInt32($var);
        $this->inches = $var;

        return $this;
    }

    /**
     * anything but "invisible"
     *
     * Generated from protobuf field <code>string color = 2;</code>
     * @return string
     */
    public function getColor()
    {
        return $this->color;
    }

    /**
     * anything but "invisible"
     *
     * Generated from protobuf field <code>string color = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setColor($var)
    {
        GPBUtil::checkString($var, True);
        $this->color = $var;

        return $this;
    }

    /**
     * i.e. "bowler"
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * i.e. "bowler"
     *
     * Generated from protobuf field <code>string name = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

}

